(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[613],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||i;return r?n.createElement(f,s(s({ref:t},l),{},{components:r})):n.createElement(f,s({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var u=2;u<i;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6752:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return m}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),s=["components"],a={title:"Autoregressive Model (AR)",slug:"/autoregressive"},c=void 0,u={unversionedId:"classic-time-series-models/autoregressive-model",id:"classic-time-series-models/autoregressive-model",isDocsHomePage:!1,title:"Autoregressive Model (AR)",description:"Assume we are given a time series $$x1,\\cdots, xt$$, P-th order autoregressive (AR (P)) models the output as a linear function of the input series",source:"@site/docs/classic-time-series-models/autoregressive-model.md",sourceDirName:"classic-time-series-models",slug:"/autoregressive",permalink:"/torchTS/docs/autoregressive",editUrl:"https://github.com/Rose-STL-Lab/torchTS/edit/main/website/docs/classic-time-series-models/autoregressive-model.md",version:"current",frontMatter:{title:"Autoregressive Model (AR)",slug:"/autoregressive"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/torchTS/docs/"},next:{title:"Vector Autoregressive Model (VAR)",permalink:"/torchTS/docs/vector"}},l=[],p={toc:l};function m(e){var t=e.components,r=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Assume we are given a time series $$x_1,\\cdots, x_t$$, P-th order autoregressive (AR (P)) models the output as a linear function of the input series"),(0,i.kt)("p",null,"$x",(0,i.kt)("em",{parentName:"p"},"t = \\sum"),"{i=1}^P a",(0,i.kt)("em",{parentName:"p"},"i x"),"{t-i} + e_t$ "),(0,i.kt)("p",null,"where $","{","a_i]}$ are the coefficients. The series $","{","e_t","}","$ can represent either a controlled external input or noise."),(0,i.kt)("p",null,"Note that the equation $\\sum",(0,i.kt)("em",{parentName:"p"},"{i=1}^p$ a_i x"),"{t-i} = a",(0,i.kt)("em",{parentName:"p"},"1x"),"{t-1} + a",(0,i.kt)("em",{parentName:"p"},"2x"),"{t-2}+\\cdots + \\cdots + a",(0,i.kt)("em",{parentName:"p"},"Px"),"{t-P}$ describes a convolution filter. We can implement AR(P) using either a feedforward neural networks with rolling window or a  convolutional network on the entire series."))}m.isMDXComponent=!0}}]);